name: dockercompose7368255552752006811
services:
  cashoutservices:
    build:
      context: D:\Coding\NET\CashoutServices
      dockerfile: src\CashoutServices\Dockerfile
    depends_on:
      mysql:
        condition: service_started
        required: true
      redis:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      DB_HOST: mysql
      DB_NAME: cashoutdb
      DB_PASSWORD: your_password
      DB_PORT: "3306"
      DB_USER: root
      REDIS_HOST: redis
      REDIS_PORT: "6379"
    image: cashoutservices
    networks:
      app-network: null
    ports:
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\adria\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\adria\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\adria\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\adria\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
  mysql:
    environment:
      MYSQL_DATABASE: cashoutdb
      MYSQL_PASSWORD: user_password
      MYSQL_ROOT_PASSWORD: your_password
      MYSQL_USER: user
    image: mysql:8.0
    networks:
      app-network: null
    ports:
      - mode: ingress
        target: 3306
        published: "3306"
        protocol: tcp
    restart: always
    volumes:
      - type: volume
        source: mysql_data
        target: /var/lib/mysql
        volume: {}
  redis:
    command:
      - redis-server
      - --requirepass
      - your_strong_password
    image: redis:alpine
    networks:
      app-network: null
    ports:
      - mode: ingress
        target: 6379
        published: "6379"
        protocol: tcp
    volumes:
      - type: volume
        source: redis_data
        target: /data
        volume: {}
networks:
  app-network:
    name: dockercompose7368255552752006811_app-network
    driver: bridge
volumes:
  mysql_data:
    name: dockercompose7368255552752006811_mysql_data
  redis_data:
    name: dockercompose7368255552752006811_redis_data